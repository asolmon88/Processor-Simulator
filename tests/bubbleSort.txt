mov 1, [R2, 0]
mov 5, [R2, 4]
mov 87, [R2, 8]
mov 12, [R2, 12]
mov 34, [R2, 16]
mov 54, [R2, 20]
mov 67, [R2, 24]
mov 80, [R2, 28]
mov 35, [R2, 32]
mov 21, [R2, 36]
mov 31, [R2, 40]
mov 9, [R2, 44]
mov 10, [R2, 48]
mov 76, [R2, 52]
mov 73, [R2, 56]
mov 45, [R2, 60]
mov 23, [R2, 64]
mov 12, [R2, 68]
mov 15, [R2, 72]
mov 84, [R2, 76]
mov 97, [R2, 80]
mov 103, [R2, 84]
mov 28, [R2, 88]
mov 102, [R2, 92]
mov 19, [R2, 96]
mov 3, [R2, 100]
mov 71, [R2, 104]
mov 92, [R2, 108]
mov 33, [R2, 112]
mov 6, [R2, 116]

mov 0, R3
mov 0, R4
mov 0, R5
mov 0, R6
mov 29, R7
mov 0, R12
mov 1, R8
mov 4, R9

forTwo:
  mov [R2, R4], R10
  add R4, R9, R6
  mov [R2, R6], R11
  cmp R10, R11
  jb swap

condition:
  sub R3, R7, R12
  add R5, R8, R5
  add R9, R4, R4
  cmp R5, R12
  ja forTwo

forOne:
  add R3, R8, R3
  cmp R3, R7
  je finish
  mov 0, R5
  mov 0, R4
  jmp forTwo

swap:
  mov R11, [R2, R4]
  mov R10, [R2, R6]
  jmp condition

finish:
end